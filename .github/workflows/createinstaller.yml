# This is a basic workflow to help you get started with Actions

name: CreateInstaller

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: 7z

      # Runs a set of commands using the runners shell
      - name: Create setup32.exe
        run: |
          7z a sat.7z * -x@3rdparty/excludefiles.txt
          VER=$(awk 'BEGIN{ORS=""}/version/{print $NF}' version.ini)
          FN32="sat-v$VER-setup32.exe"
          cat 3rdparty/7zSDx86.sfx 3rdparty/config.txt sat.7z > $FN32
          mv $FN32 dist
      - name: Version
        run: |
          VER=$(awk 'BEGIN{ORS=""}/version/{print $NF}' version.ini)
          FN32="sat-v$VER-setup32.exe"
          echo "::set-output name=version::$VER"
        id: version
      - name: Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Release v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
        #          body_path: README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bla.exe
          asset_name: bla.exe
          asset_content_type: application/exe
#      - name: "Upload Artifact"
#        uses: actions/upload-artifact@v3
#        with:
#          name: sim-artifact.exe
#          path: dist
#          retention-days: 5
